<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace指向mapper接口 -->
<mapper
	namespace="com.wt.restaurant.dao.tablereserve.ITableReserveMapper">
	<resultMap type="TableReserve" id="tablereserve">
		<id column="reserve_id" property="id" />
		<result column="reserve_time" property="reserveTime" />
		<result column="type" property="type" />

		<!-- <association javaType="com.wt.restaurant.entity.Table" property="table"> 
			<id column="table_id" property="id" /> <result column="number" property="number" 
			/> </association> <association property="box" javaType="com.wt.restaurant.entity.Box"> 
			<id column="box_id" property="id" /> <result column="room_number" property="roomNumber" 
			/> <result column="room_name" property="roomName" /> </association> -->

		<association javaType="com.wt.restaurant.entity.Customer"
			property="customer">
			<id column="customer_id" property="id" />
			<result column="nickname" property="nickname" />
		</association>

		<collection property="menu" ofType="Menu" column="id">
			<id column="menu_id" property="id" />
			<result column="menu_name" property="name" />
			<result column="large_price" property="largePrice" />
			<result column="medium_price" property="mediumPrice" />
			<result column="small_price" property="smallPrice" />
			<result column="specifications" property="specifications" />
			<result column="choose_price" property="choosePrice" />
			<result column="menu_count" property="menuCount" />
			<result column="discount_price" property="discountPrice" />
			<result column="discount" property="discount" />
		</collection>

		<discriminator javaType="string" column="type">
			<case value="包厢" resultType="Box">
				<association property="box" javaType="Box" autoMapping="false">
					<id column="box_id" property="id" />
					<result column="room_number" property="roomNumber" />
					<result column="room_name" property="roomName" />
				</association>
			</case>
			<case value="桌子" >
				<association property="table" javaType="Table" autoMapping="false">
					<id column="box_id" property="id" />
					<result column="room_number" property="number" />
					<result column="room_name" property="tableName" />
				</association>
			</case>
		</discriminator>
	</resultMap>

	<select id="listTableReserve" resultMap="tablereserve">
		SELECT
		customer.id AS
		customer_id,
		nickname,
		menu.id AS menu_id,
		menu.name AS menu_name,
		large_price,
		medium_price,
		small_price,
		discount,
		discount_price,
		specifications,
		choose_price,
		menu_count,
		tr.id AS reserve_id,
		reserve_time,
		tr.room_number,tr.box_id,tr.room_name ,`type`
		FROM
		(SELECT
		* FROM (
		SELECT
		table_reserve.id,
		table_reserve.customer_id,
		reserve_time,
		box.room_number,box.id AS box_id,box.room_name ,`type`
		FROM (SELECT *
		FROM table_reserve
		ORDER BY reserve_time DESC) AS
		table_reserve
		LEFT JOIN box
		ON box.id=table_reserve.table_box_id
		WHERE
		`type`='包厢'
		UNION ALL
		SELECT
		table_reserve.id,
		table_reserve.customer_id,
		reserve_time,
		`table`.number,`table`.id AS
		table_id,`table`.table_name,`type`
		FROM (SELECT *
		FROM table_reserve
		ORDER BY reserve_time DESC) AS
		table_reserve
		LEFT JOIN `table`
		ON
		`table`.id=table_reserve.table_box_id
		WHERE `type`='桌子') AS s
		ORDER BY
		s.reserve_time DESC
		LIMIT
		${(currentPageNo-1)*pageSize},${pageSize}
		) AS
		tr
		LEFT JOIN
		table_reserve_menu
		ON tr.id =
		table_reserve_menu.table_reserve_id
		LEFT
		JOIN customer
		ON customer.id =
		tr.customer_id
		LEFT JOIN menu
		ON menu.id =
		table_reserve_menu.menu_id
		ORDER BY tr.reserve_time desc
	</select>

	<update id="updateTableReserve" parameterType="TableReserve">
		update menu
		set
		name=#{name},
		classification_id=#{classification.id},
		price=#{price},
		sales_volume=#{salesVolume},
		discount=#{discount},
		discount_price=#{discountPrice},
		introduction=#{introduction},
		sort=#{sort}
		where id=#{id};
	</update>

	<insert id="saveTableReserve" parameterType="TableReserve"
		useGeneratedKeys="true" keyProperty="id">
		insert into table_reserve
		(customer_id,
		table_box_id,
		type,
		reserve_time)
		values(#{customer.id},
		<if test="tablereserve !=null and tablereserve.table !=null">
			#{table.id},
			'桌子',
		</if>
		<if test="tablereserve !=null and tablereserve.box !=null">
			#{box.id},
			'包厢',
		</if>
		NOW());
	</insert>

	<insert id="saveMenu">
		insert into table_reserve_menu
		(table_reserve_id,menu_id,specifications,choose_price,menu_count)
		values
		<foreach collection="menuList" item="menu" separator=",">
			(#{menu.reserveId},#{menu.id},#{menu.specifications},#{menu.choosePrice},#{menu.menuCount})
		</foreach>
	</insert>

	<insert id="saveDishOrder" parameterType="DishOrder"
		useGeneratedKeys="true" keyProperty="id">
		insert into dish_order
		(customer_id,reserve_id,reserve_type,order_number,create_time,total_count,total_amount,discount_amount,total_pay_amount)
		values(#{customer.id},#{reserve.id},#{reserveType},#{orderNumber},NOW(),#{totalCount},#{totalAmount},#{discountAmount},#{totalPayAmount});
	</insert>

	<insert id="saveDishOrderLine">
		insert into dish_order_line
		(dish_order_id,menu_id,dish_count,unit_price,specifications)
		values
		<foreach collection="dishorderlinelist" item="dishorderline"
			separator=",">
			(#{dishorderline.dishorder.id},#{dishorderline.menu.id},#{dishorderline.dishCount},#{dishorderline.unitPrice},#{dishorderline.specifications})
		</foreach>
	</insert>

	<delete id="removeTableReserve" parameterType="Integer">
		delete from
		table_reserve
		where
		id=#{id}
	</delete>

	<select id="getTableReserve" resultMap="tablereserve">
		SELECT
		table_reserve.id,
		reserve_time,
		specifications,
		choose_price,
		menu_count,
		customer.id AS
		customer_id,nickname,table.number,
		menu.id AS menu_id,menu.name AS
		menu_name,large_price,medium_price,small_price,discount,discount_price
		FROM
		table_reserve_menu
		LEFT JOIN
		table_reserve ON
		table_reserve.id=table_reserve_menu.table_reserve_id
		LEFT JOIN
		`table`
		ON table.id=table_reserve.table_id
		LEFT JOIN
		customer ON
		customer.id=table_reserve.customer_id
		LEFT JOIN menu ON
		menu.id=table_reserve_menu.menu_id
		WHERE
		table_reserve.id=#{id}
	</select>

	<select id="listTableReserveByCustomerId"
		resultMap="tablereserve">
		SELECT
		table_reserve.id,
		reserve_time,
		specifications,
		choose_price,
		menu_count,
		customer.id AS
		customer_id,nickname,table.number,
		menu.id AS menu_id,menu.name AS
		menu_name,large_price,medium_price,small_price,discount,discount_price
		FROM
		table_reserve_menu
		LEFT JOIN
		table_reserve ON
		table_reserve.id=table_reserve_menu.table_reserve_id
		LEFT JOIN
		`table`
		ON table.id=table_reserve.table_id
		LEFT JOIN
		customer ON
		customer.id=table_reserve.customer_id
		LEFT JOIN menu ON
		menu.id=table_reserve_menu.menu_id
		WHERE
		table_reserve.customer_id=#{customerId}
	</select>

	<select id="countTableReserve" resultType="Integer">
		SELECT COUNT(*) FROM
		table_reserve
	</select>

</mapper>