<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace指向mapper接口 -->
<mapper
	namespace="com.wt.restaurant.dao.banquetreserve.IBanquetReserveMapper">
	<resultMap type="BanquetReserve" id="banquetreserve">
		<id column="id" property="id" />
		<result column="reservations_name" property="reservationsName" />
		<result column="reservations_sex" property="reservationsSex" />
		<result column="reservations_tel" property="reservationsTel" />
		<result column="reservations_num" property="reservationsNum" />
		<result column="reservations_start_time"
			property="reservationsStartTime" />
		<result column="reserve_time" property="reserveTime" />
		<result column="remarks" property="remarks" />

		<collection property="combo" ofType="Combo" column="id">
			<id column="combo_id" property="id" />
			<result column="combo_name" property="comboName" />
			<result column="combo_price" property="comboPrice" />
			<result column="combo_introduction"
				property="comboIntroduction" />
			<result column="combo_classification"
				property="comboClassification" />
			<result column="combo_sort" property="comboSort" />

			<collection property="comboimage" ofType="ComboImage" column="id">
				<id column="combo_image_id" property="id" />
				<result column="url" property="url" />
				<result column="url2" property="url2" />
			</collection>
		</collection>

	</resultMap>

	<select id="listBanquetReserve" resultMap="banquetreserve">
		SELECT
		banquet_reserve.id,
		reservations_name,
		reservations_sex,
		reservations_tel,
		reservations_num,
		reservations_start_time,
		reserve_time,
		remarks,
		combo.id AS
		combo_id,combo_name,combo_price,combo_introduction,
		combo_classification,combo_sort
		FROM
		banquet_reserve
		LEFT JOIN
		combo ON
		combo.id=banquet_reserve.combo_id
		where 1=1
		<if
			test="banquetreserve !=null and banquetreserve.reservationsName !=null">
			and
			reservations_name like "%${banquetreserve.reservationsName}%"
		</if>
		<if
			test="banquetreserve !=null and banquetreserve.reservationsTel !=null">
			and
			reservations_tel=#{banquetreserve.reservationsTel}
		</if>
		<if
			test="banquetreserve !=null and banquetreserve.EatStartTime !=null and banquetreserve.EatEndTime !=null">
			and
			reservations_start_time between
			#{banquetreserve.EatStartTime} and
			#{banquetreserve.EatEndTime}
		</if>
		<if
			test="banquetreserve !=null and banquetreserve.EatStartTime !=null and banquetreserve.EatEndTime ==null">
			and
			reservations_start_time >= #{banquetreserve.EatStartTime}
		</if>
		<if
			test="banquetreserve !=null and banquetreserve.EatStartTime ==null and banquetreserve.EatEndTime !=null">
			and
			#{banquetreserve.EatEndTime} >reservations_start_time
		</if>
		<if
			test="banquetreserve !=null and banquetreserve.reserveStartTime !=null and banquetreserve.reserveEndTime !=null">
			and
			reserve_time between #{banquetreserve.reserveStartTime} and
			#{banquetreserve.reserveEndTime}
		</if>
		<if
			test="banquetreserve !=null and banquetreserve.reserveStartTime !=null and banquetreserve.reserveEndTime ==null">
			and
			reserve_time >= #{banquetreserve.reserveStartTime}
		</if>
		<if
			test="banquetreserve !=null and banquetreserve.reserveStartTime ==null and banquetreserve.reserveEndTime !=null">
			and
			#{banquetreserve.reserveEndTime} > reserve_time
		</if>
		<if test="banquetreserve !=null and banquetreserve.combo !=null">
			and
			combo_id=#{banquetreserve.combo.id}
		</if>
		ORDER BY reserve_time desc
		LIMIT
		${(currentPageNo-1)*pageSize},${pageSize}
	</select>

	<update id="updateBanquetReserve" parameterType="BanquetReserve">
		update
		banquet_reserve
		set
		combo_id=#{combo.id},
		reservations_name=#{reservationsName},
		reservations_sex=#{reservationsSex},
		reservations_tel=#{reservationsTel},
		reservations_num=#{reservationsNum},
		reservations_start_time=#{reservationsStartTime},
		remarks=#{remarks},
		where id=#{id};
	</update>

	<insert id="saveBanquetReserve" parameterType="BanquetReserve">
		insert into
		banquet_reserve
		(customer_id,combo_id,
		reservations_name,
		reservations_sex,
		reservations_tel,
		reservations_num,
		reservations_start_time,
		reserve_time,remarks)
		values(#{customer.id},#{combo.id},#{reservationsName},
		#{reservationsSex},#{reservationsTel},#{reservationsNum},#{reservationsStartTime},
		NOW(),#{remarks});
	</insert>

	<delete id="removeBanquetReserve" parameterType="Integer">
		delete from
		banquet_reserve
		where
		id=#{id}
	</delete>

	<select id="getBanquetReserve" resultMap="banquetreserve">
		SELECT
		banquet_reserve.id,
		reservations_name,
		reservations_sex,
		reservations_tel,
		reservations_num,
		reservations_start_time,
		reserve_time,
		remarks,
		combo.id AS
		combo_id,combo_name,combo_price,combo_introduction,
		combo_classification,combo_sort
		FROM
		banquet_reserve
		LEFT JOIN
		combo ON
		combo.id=banquet_reserve.combo_id
		WHERE
		banquet_reserve.id=#{id}
	</select>

	<select id="listBanquetReserveByCustomerId"
		resultMap="banquetreserve">
		SELECT
		banquet_reserve.id,
		reservations_name,
		reservations_sex,
		reservations_tel,
		reservations_num,
		reservations_start_time,
		reserve_time,
		remarks,
		combo.id AS
		combo_id,combo_name,combo_price,combo_introduction,
		combo_classification,combo_sort,combo_image.url,combo_image.url2,combo_image.id AS combo_image_id
		FROM
		banquet_reserve
		LEFT JOIN
		combo ON
		combo.id=banquet_reserve.combo_id
		LEFT JOIN
		combo_image ON
		combo.id=combo_image.combo_id
		WHERE
		banquet_reserve.customer_id=#{customerId}
	</select>

	<select id="countBanquetReserve" resultType="Integer">
		SELECT COUNT(*) FROM
		banquet_reserve
		where 1=1
		<if
			test="banquetreserve !=null and banquetreserve.reservationsName !=null">
			and
			reservations_name like "%${banquetreserve.reservationsName}%"
		</if>
		<if
			test="banquetreserve !=null and banquetreserve.reservationsTel !=null">
			and
			reservations_tel=#{banquetreserve.reservationsTel}
		</if>
		<if
			test="banquetreserve !=null and banquetreserve.EatStartTime !=null and banquetreserve.EatEndTime !=null">
			and
			reservations_start_time between
			#{banquetreserve.EatStartTime} and
			#{banquetreserve.EatEndTime}
		</if>
		<if
			test="banquetreserve !=null and banquetreserve.EatStartTime !=null and banquetreserve.EatEndTime ==null">
			and
			reservations_start_time >= #{banquetreserve.EatStartTime}
		</if>
		<if
			test="banquetreserve !=null and banquetreserve.EatStartTime ==null and banquetreserve.EatEndTime !=null">
			and
			#{banquetreserve.EatEndTime} >reservations_start_time
		</if>
		<if
			test="banquetreserve !=null and banquetreserve.reserveStartTime !=null and banquetreserve.reserveEndTime !=null">
			and
			reserve_time between #{banquetreserve.reserveStartTime} and
			#{banquetreserve.reserveEndTime}
		</if>
		<if
			test="banquetreserve !=null and banquetreserve.reserveStartTime !=null and banquetreserve.reserveEndTime ==null">
			and
			reserve_time >= #{banquetreserve.reserveStartTime}
		</if>
		<if
			test="banquetreserve !=null and banquetreserve.reserveStartTime ==null and banquetreserve.reserveEndTime !=null">
			and
			#{banquetreserve.reserveEndTime} > reserve_time
		</if>
		<if test="banquetreserve !=null and banquetreserve.combo !=null">
			and
			combo_id=#{banquetreserve.combo.id}
		</if>
	</select>

</mapper>