<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace指向mapper接口 -->
<mapper
	namespace="com.wt.restaurant.dao.tablereserve.ITableReserveMapper">

	<!-- 11111111111111111111111111桌子11111111111111111111111111 -->
	<resultMap type="TableReserve" id="table">

		<result column="reserve_time" property="reserveTime" />
		<result column="type" property="type" />

		<association javaType="com.wt.restaurant.entity.Table"
			property="table">
			<id column="box_id" property="id" />
			<result column="room_number" property="number" />
			<result column="room_name" property="tableName" />
		</association>

		<association javaType="com.wt.restaurant.entity.Customer"
			property="customer">
			<id column="customer_id" property="id" />
			<result column="nickname" property="nickname" />
		</association>


		<collection property="menu" ofType="Menu" column="id">
			<id column="menu_id" property="id" />
			<result column="menu_name" property="name" />
			<result column="large_price" property="largePrice" />
			<result column="medium_price" property="mediumPrice" />
			<result column="small_price" property="smallPrice" />
			<result column="specifications" property="specifications" />
			<result column="choose_price" property="choosePrice" />
			<result column="menu_count" property="menuCount" />
			<result column="discount_price" property="discountPrice" />
			<result column="discount" property="discount" />
		</collection>
	</resultMap>

	<!-- 222222222222222222222222222222包厢22222222222222222222222222222 -->

	<resultMap type="TableReserve" id="box">
		<!-- <id column="reserve_id" property="id" /> -->
		<result column="reserve_time" property="reserveTime" />
		<result column="type" property="type" />

		<association property="box"
			javaType="com.wt.restaurant.entity.Box">
			<id column="box_id" property="id" />
			<result column="room_number" property="roomNumber" />
			<result column="room_name" property="roomName" />
		</association>

		<association javaType="com.wt.restaurant.entity.Customer"
			property="customer">
			<id column="customer_id" property="id" />
			<result column="nickname" property="nickname" />
		</association>

		<collection property="menu" ofType="Menu" column="id">
			<id column="menu_id" property="id" />
			<result column="menu_name" property="name" />
			<result column="large_price" property="largePrice" />
			<result column="medium_price" property="mediumPrice" />
			<result column="small_price" property="smallPrice" />
			<result column="specifications" property="specifications" />
			<result column="choose_price" property="choosePrice" />
			<result column="menu_count" property="menuCount" />
			<result column="discount_price" property="discountPrice" />
			<result column="discount" property="discount" />
		</collection>
	</resultMap>

	<!-- 3333333333333333333333333扫码点餐3333333333333333333333333333333 -->
	<resultMap type="TableReserve" id="tablereserve">
<<<<<<< HEAD
		<id column="reserve_id" property="id" />
=======
		<!-- <id column="reserve_id" property="id" /> -->
>>>>>>> cbe6f807c046c8b60b9222398eeffa1e21a9e940
		<discriminator javaType="string" column="type">
			<case value="包厢" resultMap="box"></case>
			<case value="桌子" resultMap="table"></case>
		</discriminator>
	</resultMap>



	<select id="listTableReserve" resultMap="tablereserve">
		SELECT
		customer.id AS
		customer_id,
		nickname,
		menu.id AS menu_id,
		menu.name
		AS menu_name,
		large_price,
		medium_price,
		small_price,
		discount,
		discount_price,
		specifications,
		choose_price,
		menu_count,
		tr.id AS
		reserve_id,
		reserve_time,
		tr.room_number,tr.box_id,tr.room_name ,`type`
		FROM
		(SELECT
		* FROM (
		<choose>
<<<<<<< HEAD
			<when test="tablereserve !=null and tablereserve.type != null">
				<if
					test='tablereserve.type=="包厢" or tablereserve.type=="包厢桌子"'>
					SELECT
					table_reserve.id,
					table_reserve.customer_id,
					reserve_time,
					box.room_number,box.id AS box_id,box.room_name ,`type`
					FROM (SELECT *
					FROM table_reserve
					where 1=1
					<if
						test="tablereserve.reserveStartTime !=null and tablereserve.reserveEndTime !=null">
						and
						reserve_time between #{tablereserve.reserveStartTime} and
						#{tablereserve.reserveEndTime}
					</if>
					ORDER BY reserve_time DESC) AS
					table_reserve
					LEFT
					JOIN box
					ON
					box.id=table_reserve.table_box_id
					WHERE `type`='包厢'
				</if>
				<if test='tablereserve.type=="包厢桌子"'>
					UNION ALL
				</if>
				<if
					test='tablereserve.type=="桌子" or tablereserve.type=="包厢桌子"'>
					SELECT
					table_reserve.id,
					table_reserve.customer_id,
					reserve_time,
					`table`.number AS room_number,
					`table`.id AS box_id,`table`.table_name AS room_name,
					`type`
					FROM
					(SELECT *
					FROM table_reserve
					where 1=1
					<if
						test="tablereserve.reserveStartTime !=null and tablereserve.reserveEndTime !=null">
						and
						reserve_time between #{tablereserve.reserveStartTime} and
						#{tablereserve.reserveEndTime}
=======
			<when test="tablereserve !=null">
				<if test="tablereserve.type != null">
					<if test='tablereserve.type=="包厢" or tablereserve.type=="包厢桌子"'>
						SELECT
						table_reserve.id,
						table_reserve.customer_id,
						reserve_time,
						box.room_number,box.id AS box_id,box.room_name ,`type`
						FROM (SELECT
						*
						FROM table_reserve
						where 1=1
						<if
							test="tablereserve.reserveStartTime !=null and tablereserve.reserveEndTime !=null">
							and
							reserve_time between #{tablereserve.reserveStartTime} and
							#{tablereserve.reserveEndTime}
						</if>
						<if
							test="tablereserve.reserveStartTime !=null and tablereserve.reserveEndTime ==null">
							and
							reserve_time >= #{tablereserve.reserveStartTime}
						</if>
						<if
							test="tablereserve.reserveStartTime ==null and tablereserve.reserveEndTime !=null">
							and
							#{tablereserve.reserveEndTime} > reserve_time

						</if>
						ORDER BY reserve_time DESC) AS
						table_reserve
						LEFT
						JOIN box
						ON
						box.id=table_reserve.table_box_id
						WHERE `type`='包厢'
					</if>
					<if test='tablereserve.type=="包厢桌子"'>
						UNION ALL
					</if>
					<if test='tablereserve.type=="桌子" or tablereserve.type=="包厢桌子"'>
						SELECT
						table_reserve.id,
						table_reserve.customer_id,
						reserve_time,
						`table`.number AS room_number,
						`table`.id AS
						box_id,`table`.table_name AS room_name,
						`type`
						FROM
						(SELECT *
						FROM
						table_reserve
						where 1=1
						<if
							test="tablereserve.reserveStartTime !=null and tablereserve.reserveEndTime !=null">
							and
							reserve_time between #{tablereserve.reserveStartTime} and
							#{tablereserve.reserveEndTime}
						</if>
						<if
							test="tablereserve.reserveStartTime !=null and tablereserve.reserveEndTime ==null">
							and
							reserve_time >= #{tablereserve.reserveStartTime}
						</if>
						<if
							test="tablereserve.reserveStartTime ==null and tablereserve.reserveEndTime !=null">
							and
							#{tablereserve.reserveEndTime} > reserve_time
						</if>
						ORDER BY reserve_time DESC) AS
						table_reserve
						LEFT JOIN `table`
						ON
						`table`.id=table_reserve.table_box_id
						WHERE `type`='桌子'
>>>>>>> cbe6f807c046c8b60b9222398eeffa1e21a9e940
					</if>
				</if>
			</when>
			<otherwise>
<<<<<<< HEAD
				SELECT 
					NULL AS 'id',
					NULL AS 'customer_id',
					NULL AS 'reserve_time',
					NULL AS 'room_number',
					NULL AS 'box_id',
					NULL AS 'room_name',
					NULL AS 'type' 
=======
				SELECT
				NULL AS 'id',
				NULL AS 'customer_id',
				NULL AS
				'reserve_time',
				NULL AS 'room_number',
				NULL AS 'box_id',
				NULL AS
				'room_name',
				NULL AS 'type'
>>>>>>> cbe6f807c046c8b60b9222398eeffa1e21a9e940
				FROM table_reserve
				WHERE 1 = 2
			</otherwise>
		</choose>
		) AS s
		ORDER BY
		s.reserve_time DESC
		LIMIT
		${(currentPageNo-1)*pageSize},${pageSize}
		) AS
		tr
		LEFT JOIN
		table_reserve_menu
		ON tr.id =
		table_reserve_menu.table_reserve_id
		LEFT
		JOIN customer
		ON customer.id =
		tr.customer_id
		LEFT JOIN menu
		ON
		menu.id =
		table_reserve_menu.menu_id
		where 1=1
		<if test="tablereserve !=null and tablereserve.customer !=null and tablereserve.customer.nickname !=null">
			and
			tr.customer_id in(select id from customer where
			nickname like "%${tablereserve.customer.nickname}%")
		</if>
		ORDER BY tr.reserve_time desc
	</select>

	<update id="updateTableReserve" parameterType="TableReserve">
		update menu
		set
		name=#{name},
		classification_id=#{classification.id},
		price=#{price},
		sales_volume=#{salesVolume},
		discount=#{discount},
		discount_price=#{discountPrice},
		introduction=#{introduction},
		sort=#{sort}
		where id=#{id};
	</update>

	<insert id="saveTableReserve" parameterType="TableReserve"
		useGeneratedKeys="true" keyProperty="id">
		insert into table_reserve
		(customer_id,
		table_box_id,
		type,
		reserve_time)
		values(#{customer.id},
		<if test="table !=null">
			#{table.id},
			'桌子',
		</if>
		<if test="box !=null">
			#{box.id},
			'包厢',
		</if>
		NOW());
	</insert>

	<insert id="saveMenu">
		insert into table_reserve_menu
		(table_reserve_id,menu_id,specifications,choose_price,menu_count)
		values
		<foreach collection="menuList" item="menu" separator=",">
			(#{menu.reserveId},#{menu.id},#{menu.specifications},#{menu.choosePrice},#{menu.menuCount})
		</foreach>
	</insert>

	<insert id="saveDishOrder" parameterType="DishOrder"
		useGeneratedKeys="true" keyProperty="id">
		insert into dish_order
		(customer_id,reserve_id,reserve_type,order_number,create_time,total_count,total_amount,discount_amount,total_pay_amount)
		values(#{customer.id},#{reserve.id},#{reserveType},#{orderNumber},NOW(),#{totalCount},#{totalAmount},#{discountAmount},#{totalPayAmount});
	</insert>

	<insert id="saveDishOrderLine">
		insert into dish_order_line
		(dish_order_id,menu_id,dish_count,unit_price,specifications)
		values
		<foreach collection="dishorderlinelist" item="dishorderline"
			separator=",">
			(#{dishorderline.dishorder.id},#{dishorderline.menu.id},#{dishorderline.dishCount},#{dishorderline.unitPrice},#{dishorderline.specifications})
		</foreach>
	</insert>

	<delete id="removeTableReserve" parameterType="Integer">
		delete from
		table_reserve
		where
		id=#{id}
	</delete>

	<select id="getTableReserve" resultMap="tablereserve">
		SELECT
		customer.id AS
		customer_id,
		nickname,
		menu.id AS menu_id,
		menu.name AS menu_name,
		large_price,
		medium_price,
		small_price,
		discount,
		discount_price,
		specifications,
		choose_price,
		menu_count,
		tr.id AS reserve_id,
		reserve_time,
		tr.room_number,tr.box_id,tr.room_name ,`type`
		FROM
		(SELECT
		table_reserve.id,
		table_reserve.customer_id,
		reserve_time,
		box.room_number,box.id AS box_id,box.room_name ,`type`
		FROM (SELECT *
		FROM table_reserve
		WHERE table_reserve.id=#{id}) AS
		table_reserve
		LEFT
		JOIN box
		ON box.id=table_reserve.table_box_id
		WHERE
		`type`='包厢'
		UNION ALL
		SELECT
		table_reserve.id,
		table_reserve.customer_id,
		reserve_time,
		`table`.number,`table`.id AS
		table_id,`table`.table_name,`type`
		FROM
		(SELECT *
		FROM table_reserve
		WHERE table_reserve.id=#{id}) AS
		table_reserve
		LEFT JOIN `table`
		ON
		`table`.id=table_reserve.table_box_id
		WHERE `type`='桌子'
		) AS
		tr
		LEFT JOIN
		table_reserve_menu
		ON tr.id =
		table_reserve_menu.table_reserve_id
		LEFT
		JOIN customer
		ON customer.id =
		tr.customer_id
		LEFT JOIN menu
		ON menu.id =
		table_reserve_menu.menu_id
	</select>

	<select id="listTableReserveByCustomerId"
		resultMap="tablereserve">
		SELECT
		customer.id AS
		customer_id,
		nickname,
		menu.id AS menu_id,
		menu.name AS menu_name,
		large_price,
		medium_price,
		small_price,
		discount,
		discount_price,
		specifications,
		choose_price,
		menu_count,
		tr.id AS
		reserve_id,
		reserve_time,
		tr.room_number,tr.box_id,tr.room_name ,`type`
		FROM
		(SELECT table_reserve.id,
		table_reserve.customer_id,
		reserve_time,
		box.room_number,box.id AS box_id,box.room_name ,`type`
		FROM (SELECT *
		FROM table_reserve
		WHERE table_reserve.customer_id=#{customerId}) AS
		table_reserve
		LEFT JOIN box
		ON box.id=table_reserve.table_box_id
		WHERE
		`type`='包厢'
		UNION ALL
		SELECT
		table_reserve.id,
		table_reserve.customer_id,
		reserve_time,
		`table`.number,`table`.id AS
		table_id,`table`.table_name,`type`
		FROM (SELECT *
		FROM table_reserve
		WHERE table_reserve.customer_id=#{customerId}) AS
		table_reserve
		LEFT
		JOIN `table`
		ON
		`table`.id=table_reserve.table_box_id
		WHERE `type`='桌子'
		)
		AS
		tr
		LEFT JOIN
		table_reserve_menu
		ON tr.id =
		table_reserve_menu.table_reserve_id
		LEFT
		JOIN customer
		ON customer.id =
		tr.customer_id
		LEFT JOIN menu
		ON menu.id =
		table_reserve_menu.menu_id
	</select>

	<select id="countTableReserve" resultType="Integer">
		SELECT COUNT(*) FROM
		table_reserve where 1=1
		<if test="tablereserve !=null">
			<choose>
				<when
					test='tablereserve.type !=null and tablereserve.type=="包厢"'>
					and `type`='包厢'
				</when>
				<when
					test='tablereserve.type !=null and tablereserve.type=="桌子"'>
					and `type`='桌子'
				</when>
				<otherwise></otherwise>
			</choose>
			<if
				test="tablereserve.reserveStartTime !=null and tablereserve.reserveEndTime !=null">
				and
				reserve_time between #{tablereserve.reserveStartTime} and
				#{tablereserve.reserveEndTime}
			</if>
			<if
				test="tablereserve.reserveStartTime !=null and tablereserve.reserveEndTime ==null">
				and
				reserve_time >= #{tablereserve.reserveStartTime}
			</if>
			<if
				test="tablereserve.reserveStartTime ==null and tablereserve.reserveEndTime !=null">
				and
				#{tablereserve.reserveEndTime} > reserve_time
			</if>
			<if test="tablereserve.customer !=null">
				and
				table_reserve.customer_id in(select id from customer
				where
				nickname like "%${tablereserve.customer.nickname}%")
			</if>
		</if>
	</select>
</mapper>